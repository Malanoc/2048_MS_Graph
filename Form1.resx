<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAdOn3/T2yv/0torf9JZqv/RmGr/0plr/9FX6v/S2Wx/0dhrv9HYa7/R2Gu/0dhrv9HYa3/R2Gt/0li
        rP9KYaz/TGCu/05grf9MYaz/SmOp/0pjqf9JZKf/R2Oq/0dirP9LZbH/RV+s/0xjsf9IYKz/TGSs/05o
        q/9Ubav/Ijx4/0pnqv99mt3/epfc/3qW3f94k93/fZfj/3eR3f99l+T/fZfk/32X5P99lub/fZfk/32X
        5P99l+P/fZfj/3+X4/+CluT/gpbk/4KX4v+AmOD/f5nf/32a3/99meD/fZji/32X5P93kd7/f5bm/3qS
        3v99ld3/fZfa/4Kb2/9PaaX/TGmu/4Ge4/9/m+L/gZ3k/4Cb5f+Fn+v/f5nm/4Sd7f98l+f/fJfn/3yX
        6P98l+f/fJfn/3yY5f98mOX/fpfn/4CX5/+Al+f/gJfl/36Y5P9+meP/fJnj/3yZ4/98meT/gp3t/32Y
        6P+Fne//gJrn/4Oc5v+BnN//hJ/f/09rqP9DYKX/eJTb/3iU2/97luD/epTg/36Y5f93kOD/epXm/36Z
        6v9+mOz/fpjs/3yZ6v9+mer/fJnq/3yZ6v9+mer/gJjs/4CY6v9+men/fprn/36b5v98m+b/fJvm/3ya
        5/94leb/dZDh/3yX6P96k+P/e5Xh/3qU2v97ldf/RmKf/0llrP9/m+L/f5rk/4Gb5/+Amuf/g5zs/3mU
        5f99l+v/eJLm/3aR5/92kef/dZLn/3aR5/91k+b/dZPm/3WS5/92kej/dpHn/3aS5v91k+T/dZXh/3WV
        4f91lOP/dZPk/3qY6/92lOf/f5vv/36Z6v+Bm+j/f5vi/4Gc3/9LZ6f/SWSu/36Z4/9+mOT/f5nm/36X
        5/9/muv/d5Hl/3qV6/99mO7/fJjv/3yY7/98mO//fJjv/3qZ7v96me7/epjv/3qY8f96mO//fJnu/3qa
        7f96m+r/eJzq/3qb6/96mu3/d5br/3KR5v98me7/epfo/32Z5v9+meP/gJrg/0tnqP9MZLD/gZnl/36Y
        5P+Amuf/fZjp/4Ca7v95kuj/fJfu/3eS6f92kev/dpHr/3SS6/90kuv/dJLp/3SS6f9yk+n/cpLr/3KS
        6/90kun/cpTn/3KV5f9wleX/cpXl/3KU5/93mO7/dJLp/32Z8P97l+v/fpnp/36Z4/+Bm+H/TGeq/0pi
        rv9/l+P/fJbj/36X5/97luf/gJru/3eS6P99mO//epTu/3mU7v95lO7/d5Xu/3eV7v93lez/d5Xs/3WW
        7P91le7/dZXu/3WX6/91l+r/dZjo/3OY6P9zmOr/c5jq/3iZ7/9ykuv/fZnw/3iV6v98l+f/epfi/32Z
        4P9KZaj/S2Wy/32X5P+Bmur/dY7e/4Kd7v+DnfH/do/l/3eS6P98l+7/eJTr/4ik+/91kej/dJDn/3ST
        6P+An/T/bo3i/3mX7v9vjeT/dpbp/3ea6v93mur/dZnn/3+i8v9wkuX/b5Dm/3iZ7/96lu3/co/k/3iT
        5P+Go+7/eZXc/0torf9HYa7/eJLf/4Kb6/9/mOj/g57v/3iS5v92j+X/iaL4/3uU6v+Am/H/bIfd/3iT
        6f9zj+P/fJnq/3iW5/98muv/fZvu/3uZ7P9/ne7/e5rp/3mb5/9rjdn/epvq/2WI2P95mO3/fJrx/36a
        8f98l+3/e5bn/4Ke6/93k9r/SGWq/0Req/98luP/gpvr/3mS4v+AmOr/fpbo/32V6f97k+f/e5Pn/3iS
        5v99mOn/eZTl/4ij8/+Foe7/b4vY/3uX5P96k+P/e5Tk/3qW4/9yj9r/eJjh/3OU3f+EpO//e5zr/3mX
        6v92k+j/d5Pq/4Cb8f97luf/gJrn/3yV3/9LZKz/SWOw/36Y5f9+l+f/d5Dg/32V5/9+luj/h5/x/4GZ
        6/+EnO7/h57u/3+W5P+Hn+v/covV/4We5v91jtb/jKXt/4ad6P+Gnej/h5/n/3+Z3/+Fouf/h6br/3KS
        2/90k97/fJnq/3eS6P90j+X/gZrw/3yU5v9+mOX/gJnj/0xlrf9IZLH/eJTh/3qV5f9/mur/gZrq/3WO
        3v+Al+f/d47c/3uS4P96kd3/hp3o/32V3f9/ldz/hJvf/5Gp6/95kdP/fZLW/4SZ3f+Jn+H/fZbW/32Y
        2P+FoeL/bInO/42o8v9+men/hqHy/3yW6v+Dm+//fZbm/4CY5P+BmuT/SWKq/z5ap/+AnOn/f5rq/3mU
        5P+Cm+v/fZfk/2J5x/8QKHT/DSRw/yQ6gv8oPoX/h5zg/1dtr/8ADkz/Umel/5Sp5v+Xqer/gZLR/15w
        r/9ec7D/i6Pf/2R9u/8lP4H/CSJq/1pyvv+DnOz/fpbo/32V5/9+leX/gZnl/4Oc5v9JYqr/PVuo/4Oh
        7v9+muf/dJDd/4Gb6P+Fn+z/ZXzK/wAQXP9kesL/d43U/4Wa3v9hdbb/Gi9t/5Wp4/8gNG7/Z3qz/3uK
        yP+HldD/V2ei/zxPiP9whL7/HTJv/2N8vP90jtH/HjWA/3aN2/9/lef/epDi/36V5f+BmeX/g5vj/0tk
        qv9NarX/eJXg/3OP3P+Enuv/g53q/3eR3v+Lo+//bYTP/wAQV/9je73/iZ3e/zhNiv9ccKr/gJPM/1dq
        o/9LXJX/CRdS/zA+ef8OH1f/FCVd/3+Tyv8GGlP/iZ7b/4KY2f8AFFv/d4zX/4mf7f9/lOX/gZjm/4GZ
        5f9/mOD/R2Gn/0Ziqf99mOL/gpzo/3+Z5v97lOT/covb/4KZ5/+CmeT/cIfL/wMcXP9lerf/QFSO/2Bz
        rP+Mndb/aXqz/0NTjv9SYp3/W2um/0lakv9OYJX/hpnM/z1Shf8aLmX/HDBq/0NVlv+HmeD/hJfi/4OX
        5P+Dmub/fJTg/3yX4f9GYqn/TGas/3+Y4P97k9//d47e/4Ka7P+Fne//g5ro/2R9x/+IouX/ZX6+/x01
        cf89U43/YnWu/4qb1P9KWZf/SlmX/4KT0v8oO3j/S16X/05jl/+Gm87/LEF0/2B1qf9TZp//JDV0/4OT
        2P+Ooer/gZXi/3mR3f9+mOT/gZ7o/0FeqP9DXKT/gJnj/4Ka5v98k+P/hZ3v/3+X6f9bdMT/HTWB/3KL
        0/9NZ6n/L0iG/2d/u/8PJGH/jqHe/yAwcv+BkdP/lqns/3CDxv8ACkj/PlSO/36Sy/8ZLmX/e4/I/2N4
        tf8rPoH/fZHY/4ug6/9/leP/eZDe/4Gb5/+Bnuj/Ql+p/0dgqP+Fnuj/g5vn/3eO3v98lOj/gJjs/3eP
        4f9NZ7T/ECt1/ytFi/9/mdv/iqPj/1FnqP8IHmD/bH/D/3CCyf+GmeL/gZff/05lqf9gebn/iKDc/3aO
        yv8FHFr/L0WH/2N5wP+AleD/e5Hf/4GY6P+Bmur/f5nm/3iV4P9HZK7/SWGp/4KZ5P+Dmuj/fJLk/3+W
        7P+DmvD/jKX7/36Z6v+AnOn/dZDa/3SR1v9/md//e5Ta/4ae5v99kt3/h57q/3uS4v+LpfL/g5zm/3yW
        3P+Mpuj/jKbo/32X2v+FneX/iaDs/4Oa6P91i93/gJjq/4Sc7v97lub/c4/c/0pnsv9KYqr/fpXg/4GY
        5v+Dmev/hJvx/3qQ6P96k+n/bIba/3SP3/+MqfT/fZrk/36b5f+Fn+v/hqDt/3KJ2f+AmOr/d5Dm/3qW
        6v9/mur/fJnk/3WR2P9uitH/iKPt/3iS3v9/mOj/gJjq/3yU6P9/l+v/eZPn/36Z6v92keH/SGSx/1Np
        sP+AmOD/fJPh/3qQ4v99lOr/fJLq/4ef9/9/mvD/d5Tl/3uZ6P96mOX/cI7b/3uW5v9sh9j/i6P3/4Oc
        8v93kuz/fJrz/26L4P+Anu//epjl/4Kg7f9+muf/gZzt/3WP4/96k+n/f5fv/3yU7P92kOT/g57v/3qV
        5f9GYq//Q1mg/4CW3v+Hnev/g5nr/4CX7f94kOj/gJjw/3OO5P99m+7/dJLj/3qY6f95l+j/f5zt/4Ke
        8v91jeX/d5Hr/3WR7/93lvH/d5Xu/36d8v9xkuL/c5Hi/3uZ6v92kub/f5rx/3aR6P97k+3/fpbu/3uU
        6v+HovP/eZXi/0Virf9OZan/g5ng/4CX4/+BmOj/fpXr/4GZ8f96kuz/fpnw/3mW6/95l+j/eZfo/3mX
        6P95l+r/eZbr/3qU7v95lO//d5Py/3WU8f91lO//dZbs/3WX6v93l+r/d5fq/3mW6/99mfD/d5Ls/3+Z
        8/98lOz/fZbs/32V5/9+mOX/SWSu/0xjp/+Bl97/f5bi/3+W5v9+k+j/fpbu/3aO5v95lOv/dpTn/3aU
        5f92lOX/dpTl/3aU5/92k+j/d5Hr/3eQ7P90kO//dJDu/3SS6/9yk+n/dJTn/3SU5/90k+j/dJPo/3iU
        6/9zjuj/fJbw/3qS6v99len/fJXl/3yW4v9HY6r/Umqs/4if4/+FnOf/hp3r/4Sa7P+DnPL/e5Tq/36Z
        7/98mu3/fJrr/3yb6v98m+r/fZnt/32Y7v9/l/H/fZby/32W8v98l/L/fJjv/3qZ7v98mu3/fJrr/3ya
        7f98me7/fpnw/3mU6/+Dm/P/gJnv/4Sc7v+EnOj/hZ7m/09pr/9JYaP/f5ba/32V3f9+leP/fZPl/36W
        6v90juL/dpLm/3aT5P91lOP/dpTh/3aU4f92k+T/eJLm/3iR5/94kOj/eJDq/3iQ6P92kef/dpPk/3aT
        5P92lOP/dpPk/3aS5v92kef/dI3j/3yV6/97k+f/fpXl/32U3/99ltz/R2Gj/01mpv+Cmtz/gJnf/4Ka
        5v+BmOj/g5vt/3qV5v9/muv/fprn/3yb5v9+m+b/fpvm/36a5/+Amen/gJjq/4KX7P+Cl+z/gpfs/4CY
        6v+Amuf/fprn/36b5v9+muf/fpnp/3+Z7f96lOj/g5vv/4GY6P+Cmub/gJnf/4Ka3P9NZqb/TWak/3+a
        2v9+l93/f5ji/3yW4/+Bmur/eJPk/36Z6f98meT/fJnj/3yZ4/9+meP/fpjk/4CX5f+Al+f/gZbn/4GW
        5/+Bluf/gZfl/4CY5P+AmeP/fpnj/36Y5P98mOX/fpnq/3qS5P+Dmev/fpXj/4CX4v+Al9v/g5na/09n
        o/9QbKj/g5/c/4Ca3f9/mOD/e5Xh/3+Z5v94k+P/fprn/3uY4v97meD/fZrf/3+Z3/9/mOD/gJfi/4CW
        5P+CluT/hJXk/4SW4/+El+L/gpjg/4CZ3/9/md//f5jg/32X4/+Amen/epPj/4GY6P9+leH/gpjg/4Ka
        3P+Hntz/Vmym/x87d/9Rbar/TGeq/0pjq/9FX6v/SWOw/0Jeq/9IZbD/RWKs/0Vkqf9JY6n/SWSn/0pi
        qv9KYaz/TGCt/0xgrv9QYK3/UGCs/05hrP9MYqn/TGKp/0pkp/9JYqr/SWKs/0pksf9EXa3/TGKw/0hf
        q/9NY6r/T2ep/1dsqf8lO3X/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>